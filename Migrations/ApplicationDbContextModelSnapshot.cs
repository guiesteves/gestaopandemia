// <auto-generated />
using System;
using CVC19.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CVC19.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CVC19.Models.AgentePatogenico", b =>
                {
                    b.Property<int>("AgentePatogenicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("TipoAgentePatogenicoId")
                        .HasColumnType("integer");

                    b.HasKey("AgentePatogenicoId");

                    b.HasIndex("TipoAgentePatogenicoId");

                    b.ToTable("AgentePatogenico");

                    b.HasData(
                        new
                        {
                            AgentePatogenicoId = 1,
                            Nome = "COVID19",
                            TipoAgentePatogenicoId = 4
                        });
                });

            modelBuilder.Entity("CVC19.Models.Laboratorio", b =>
                {
                    b.Property<int>("LaboratorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("PaisId")
                        .HasColumnType("integer");

                    b.HasKey("LaboratorioId");

                    b.HasIndex("PaisId");

                    b.ToTable("Laboratorio");

                    b.HasData(
                        new
                        {
                            LaboratorioId = 1,
                            Nome = "Sinovac",
                            PaisId = 49
                        },
                        new
                        {
                            LaboratorioId = 2,
                            Nome = "Sinopharm",
                            PaisId = 49
                        },
                        new
                        {
                            LaboratorioId = 3,
                            Nome = "Instituto de Biologia Médica da Academia Chinesa de Ciencias Médicas",
                            PaisId = 49
                        },
                        new
                        {
                            LaboratorioId = 4,
                            Nome = "Instituto de Pesquisa Para Problemas de Segurança Biológica",
                            PaisId = 44
                        },
                        new
                        {
                            LaboratorioId = 5,
                            Nome = "Bharat Biotech",
                            PaisId = 108
                        },
                        new
                        {
                            LaboratorioId = 6,
                            Nome = "Universidade de Oxford/AstraZaneca",
                            PaisId = 186
                        },
                        new
                        {
                            LaboratorioId = 7,
                            Nome = "CanSino",
                            PaisId = 49
                        },
                        new
                        {
                            LaboratorioId = 8,
                            Nome = "Instituto de Pesquisa Gamaleya",
                            PaisId = 190
                        },
                        new
                        {
                            LaboratorioId = 9,
                            Nome = "Johnson",
                            PaisId = 76
                        },
                        new
                        {
                            LaboratorioId = 10,
                            Nome = "Moderna",
                            PaisId = 76
                        },
                        new
                        {
                            LaboratorioId = 11,
                            Nome = "Pfizer/BioNTech",
                            PaisId = 76
                        },
                        new
                        {
                            LaboratorioId = 12,
                            Nome = "Bayer/CureVac",
                            PaisId = 5
                        },
                        new
                        {
                            LaboratorioId = 13,
                            Nome = "Zydus Cadila",
                            PaisId = 108
                        },
                        new
                        {
                            LaboratorioId = 14,
                            Nome = "Novavax",
                            PaisId = 76
                        },
                        new
                        {
                            LaboratorioId = 15,
                            Nome = "Anhui Zhifei Longcom e Academia Chinesa de Ciencias Médicas",
                            PaisId = 49
                        });
                });

            modelBuilder.Entity("CVC19.Models.Pais", b =>
                {
                    b.Property<int>("PaisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.HasKey("PaisId");

                    b.ToTable("Pais");

                    b.HasData(
                        new
                        {
                            PaisId = 1,
                            Nome = "Afeganistão",
                            Sigla = "AF"
                        },
                        new
                        {
                            PaisId = 2,
                            Nome = "África do Sul",
                            Sigla = "ZA"
                        },
                        new
                        {
                            PaisId = 3,
                            Nome = "Åland, Ilhas",
                            Sigla = "AX"
                        },
                        new
                        {
                            PaisId = 4,
                            Nome = "Albânia",
                            Sigla = "AL"
                        },
                        new
                        {
                            PaisId = 5,
                            Nome = "Alemanha",
                            Sigla = "DE"
                        },
                        new
                        {
                            PaisId = 6,
                            Nome = "Andorra",
                            Sigla = "AD"
                        },
                        new
                        {
                            PaisId = 7,
                            Nome = "Angola",
                            Sigla = "AO"
                        },
                        new
                        {
                            PaisId = 8,
                            Nome = "Anguilla",
                            Sigla = "AI"
                        },
                        new
                        {
                            PaisId = 9,
                            Nome = "Antártica",
                            Sigla = "AQ"
                        },
                        new
                        {
                            PaisId = 10,
                            Nome = "Antigua e Barbuda",
                            Sigla = "AG"
                        },
                        new
                        {
                            PaisId = 11,
                            Nome = "Antilhas Holandesas",
                            Sigla = "AN"
                        },
                        new
                        {
                            PaisId = 12,
                            Nome = "Arábia Saudita",
                            Sigla = "SA"
                        },
                        new
                        {
                            PaisId = 13,
                            Nome = "Argélia",
                            Sigla = "DZ"
                        },
                        new
                        {
                            PaisId = 14,
                            Nome = "Argentina",
                            Sigla = "AR"
                        },
                        new
                        {
                            PaisId = 15,
                            Nome = "Arménia",
                            Sigla = "AM"
                        },
                        new
                        {
                            PaisId = 16,
                            Nome = "Aruba",
                            Sigla = "AW"
                        },
                        new
                        {
                            PaisId = 17,
                            Nome = "Austrália",
                            Sigla = "AU"
                        },
                        new
                        {
                            PaisId = 18,
                            Nome = "Áustria",
                            Sigla = "AT"
                        },
                        new
                        {
                            PaisId = 19,
                            Nome = "Azerbeijão",
                            Sigla = "AZ"
                        },
                        new
                        {
                            PaisId = 20,
                            Nome = "Bahamas",
                            Sigla = "BS"
                        },
                        new
                        {
                            PaisId = 21,
                            Nome = "Bahrain",
                            Sigla = "BH"
                        },
                        new
                        {
                            PaisId = 22,
                            Nome = "Bangladesh",
                            Sigla = "BD"
                        },
                        new
                        {
                            PaisId = 23,
                            Nome = "Barbados",
                            Sigla = "BB"
                        },
                        new
                        {
                            PaisId = 24,
                            Nome = "Bélgica",
                            Sigla = "BE"
                        },
                        new
                        {
                            PaisId = 25,
                            Nome = "Belize",
                            Sigla = "BZ"
                        },
                        new
                        {
                            PaisId = 26,
                            Nome = "Benin",
                            Sigla = "BJ"
                        },
                        new
                        {
                            PaisId = 27,
                            Nome = "Bermuda",
                            Sigla = "BM"
                        },
                        new
                        {
                            PaisId = 28,
                            Nome = "BieloRússia",
                            Sigla = "BY"
                        },
                        new
                        {
                            PaisId = 29,
                            Nome = "Bolívia",
                            Sigla = "BO"
                        },
                        new
                        {
                            PaisId = 30,
                            Nome = "BósniaHerzegovina",
                            Sigla = "BA"
                        },
                        new
                        {
                            PaisId = 31,
                            Nome = "Botswana",
                            Sigla = "BW"
                        },
                        new
                        {
                            PaisId = 32,
                            Nome = "Bouvet, Ilha",
                            Sigla = "BV"
                        },
                        new
                        {
                            PaisId = 33,
                            Nome = "Brasil",
                            Sigla = "BR"
                        },
                        new
                        {
                            PaisId = 34,
                            Nome = "Brunei",
                            Sigla = "BN"
                        },
                        new
                        {
                            PaisId = 35,
                            Nome = "Bulgária",
                            Sigla = "BG"
                        },
                        new
                        {
                            PaisId = 36,
                            Nome = "Burkina Faso",
                            Sigla = "BF"
                        },
                        new
                        {
                            PaisId = 37,
                            Nome = "Burundi",
                            Sigla = "BI"
                        },
                        new
                        {
                            PaisId = 38,
                            Nome = "Butão",
                            Sigla = "BT"
                        },
                        new
                        {
                            PaisId = 39,
                            Nome = "Cabo Verde",
                            Sigla = "CV"
                        },
                        new
                        {
                            PaisId = 40,
                            Nome = "Cambodja",
                            Sigla = "KH"
                        },
                        new
                        {
                            PaisId = 41,
                            Nome = "Camarões",
                            Sigla = "CM"
                        },
                        new
                        {
                            PaisId = 42,
                            Nome = "Canadá",
                            Sigla = "CA"
                        },
                        new
                        {
                            PaisId = 43,
                            Nome = "Cayman, Ilhas",
                            Sigla = "KY"
                        },
                        new
                        {
                            PaisId = 44,
                            Nome = "Cazaquistão",
                            Sigla = "KZ"
                        },
                        new
                        {
                            PaisId = 45,
                            Nome = "Centroafricana, República",
                            Sigla = "CF"
                        },
                        new
                        {
                            PaisId = 46,
                            Nome = "Chade",
                            Sigla = "TD"
                        },
                        new
                        {
                            PaisId = 47,
                            Nome = "Checa, República",
                            Sigla = "CZ"
                        },
                        new
                        {
                            PaisId = 48,
                            Nome = "Chile",
                            Sigla = "CL"
                        },
                        new
                        {
                            PaisId = 49,
                            Nome = "China",
                            Sigla = "CN"
                        },
                        new
                        {
                            PaisId = 50,
                            Nome = "Chipre",
                            Sigla = "CY"
                        },
                        new
                        {
                            PaisId = 51,
                            Nome = "Christmas, Ilha",
                            Sigla = "CX"
                        },
                        new
                        {
                            PaisId = 52,
                            Nome = "Cocos, Ilhas",
                            Sigla = "CC"
                        },
                        new
                        {
                            PaisId = 53,
                            Nome = "Colômbia",
                            Sigla = "CO"
                        },
                        new
                        {
                            PaisId = 54,
                            Nome = "Comores",
                            Sigla = "KM"
                        },
                        new
                        {
                            PaisId = 55,
                            Nome = "Congo, República do",
                            Sigla = "CG"
                        },
                        new
                        {
                            PaisId = 56,
                            Nome = "Congo, República Democrática do (antigo Zaire)",
                            Sigla = "CD"
                        },
                        new
                        {
                            PaisId = 57,
                            Nome = "Cook, Ilhas",
                            Sigla = "CK"
                        },
                        new
                        {
                            PaisId = 58,
                            Nome = "Coreia do Sul",
                            Sigla = "KR"
                        },
                        new
                        {
                            PaisId = 59,
                            Nome = "Coreia, República Democrática da (Coreia do Norte)",
                            Sigla = "KP"
                        },
                        new
                        {
                            PaisId = 60,
                            Nome = "Costa do Marfim",
                            Sigla = "CI"
                        },
                        new
                        {
                            PaisId = 61,
                            Nome = "Costa Rica",
                            Sigla = "CR"
                        },
                        new
                        {
                            PaisId = 62,
                            Nome = "Croácia",
                            Sigla = "HR"
                        },
                        new
                        {
                            PaisId = 63,
                            Nome = "Cuba",
                            Sigla = "CU"
                        },
                        new
                        {
                            PaisId = 64,
                            Nome = "Dinamarca",
                            Sigla = "DK"
                        },
                        new
                        {
                            PaisId = 65,
                            Nome = "Djibouti",
                            Sigla = "DJ"
                        },
                        new
                        {
                            PaisId = 66,
                            Nome = "Dominica",
                            Sigla = "DM"
                        },
                        new
                        {
                            PaisId = 67,
                            Nome = "Dominicana, República",
                            Sigla = "DO"
                        },
                        new
                        {
                            PaisId = 68,
                            Nome = "Egipto",
                            Sigla = "EG"
                        },
                        new
                        {
                            PaisId = 69,
                            Nome = "El Salvador",
                            Sigla = "SV"
                        },
                        new
                        {
                            PaisId = 70,
                            Nome = "Emiratos Árabes Unidos",
                            Sigla = "AE"
                        },
                        new
                        {
                            PaisId = 71,
                            Nome = "Equador",
                            Sigla = "EC"
                        },
                        new
                        {
                            PaisId = 72,
                            Nome = "Eritreia",
                            Sigla = "ER"
                        },
                        new
                        {
                            PaisId = 73,
                            Nome = "Eslováquia",
                            Sigla = "SK"
                        },
                        new
                        {
                            PaisId = 74,
                            Nome = "Eslovénia",
                            Sigla = "SI"
                        },
                        new
                        {
                            PaisId = 75,
                            Nome = "Espanha",
                            Sigla = "ES"
                        },
                        new
                        {
                            PaisId = 76,
                            Nome = "Estados Unidos da América",
                            Sigla = "US"
                        },
                        new
                        {
                            PaisId = 77,
                            Nome = "Estónia",
                            Sigla = "EE"
                        },
                        new
                        {
                            PaisId = 78,
                            Nome = "Etiópia",
                            Sigla = "ET"
                        },
                        new
                        {
                            PaisId = 79,
                            Nome = "Faroe, Ilhas",
                            Sigla = "FO"
                        },
                        new
                        {
                            PaisId = 80,
                            Nome = "Fiji",
                            Sigla = "FJ"
                        },
                        new
                        {
                            PaisId = 81,
                            Nome = "Filipinas",
                            Sigla = "PH"
                        },
                        new
                        {
                            PaisId = 82,
                            Nome = "Finlândia",
                            Sigla = "FI"
                        },
                        new
                        {
                            PaisId = 83,
                            Nome = "França",
                            Sigla = "FR"
                        },
                        new
                        {
                            PaisId = 84,
                            Nome = "Gabão",
                            Sigla = "GA"
                        },
                        new
                        {
                            PaisId = 85,
                            Nome = "Gâmbia",
                            Sigla = "GM"
                        },
                        new
                        {
                            PaisId = 86,
                            Nome = "Gana",
                            Sigla = "GH"
                        },
                        new
                        {
                            PaisId = 87,
                            Nome = "Geórgia",
                            Sigla = "GE"
                        },
                        new
                        {
                            PaisId = 88,
                            Nome = "Geórgia do Sul e Sandwich do Sul, Ilhas",
                            Sigla = "GS"
                        },
                        new
                        {
                            PaisId = 89,
                            Nome = "Gibraltar",
                            Sigla = "GI"
                        },
                        new
                        {
                            PaisId = 90,
                            Nome = "Grécia",
                            Sigla = "GR"
                        },
                        new
                        {
                            PaisId = 91,
                            Nome = "Grenada",
                            Sigla = "GD"
                        },
                        new
                        {
                            PaisId = 92,
                            Nome = "Gronelândia",
                            Sigla = "GL"
                        },
                        new
                        {
                            PaisId = 93,
                            Nome = "Guadeloupe",
                            Sigla = "GP"
                        },
                        new
                        {
                            PaisId = 94,
                            Nome = "Guam",
                            Sigla = "GU"
                        },
                        new
                        {
                            PaisId = 95,
                            Nome = "Guatemala",
                            Sigla = "GT"
                        },
                        new
                        {
                            PaisId = 96,
                            Nome = "Guernsey",
                            Sigla = "GG"
                        },
                        new
                        {
                            PaisId = 97,
                            Nome = "Guiana",
                            Sigla = "GY"
                        },
                        new
                        {
                            PaisId = 98,
                            Nome = "Guiana Francesa",
                            Sigla = "GF"
                        },
                        new
                        {
                            PaisId = 99,
                            Nome = "GuinéBissau",
                            Sigla = "GW"
                        },
                        new
                        {
                            PaisId = 100,
                            Nome = "GuinéConacri",
                            Sigla = "GN"
                        },
                        new
                        {
                            PaisId = 101,
                            Nome = "Guiné Equatorial",
                            Sigla = "GQ"
                        },
                        new
                        {
                            PaisId = 102,
                            Nome = "Haiti",
                            Sigla = "HT"
                        },
                        new
                        {
                            PaisId = 103,
                            Nome = "Heard e Ilhas McDonald, Ilha",
                            Sigla = "HM"
                        },
                        new
                        {
                            PaisId = 104,
                            Nome = "Honduras",
                            Sigla = "HN"
                        },
                        new
                        {
                            PaisId = 105,
                            Nome = "Hong Kong",
                            Sigla = "HK"
                        },
                        new
                        {
                            PaisId = 106,
                            Nome = "Hungria",
                            Sigla = "HU"
                        },
                        new
                        {
                            PaisId = 107,
                            Nome = "Iémen",
                            Sigla = "YE"
                        },
                        new
                        {
                            PaisId = 108,
                            Nome = "Índia",
                            Sigla = "IN"
                        },
                        new
                        {
                            PaisId = 109,
                            Nome = "Indonésia",
                            Sigla = "ID"
                        },
                        new
                        {
                            PaisId = 110,
                            Nome = "Iraque",
                            Sigla = "IQ"
                        },
                        new
                        {
                            PaisId = 111,
                            Nome = "Irão",
                            Sigla = "IR"
                        },
                        new
                        {
                            PaisId = 112,
                            Nome = "Irlanda",
                            Sigla = "IE"
                        },
                        new
                        {
                            PaisId = 113,
                            Nome = "Islândia",
                            Sigla = "IS"
                        },
                        new
                        {
                            PaisId = 114,
                            Nome = "Israel",
                            Sigla = "IL"
                        },
                        new
                        {
                            PaisId = 115,
                            Nome = "Itália",
                            Sigla = "IT"
                        },
                        new
                        {
                            PaisId = 116,
                            Nome = "Jamaica",
                            Sigla = "JM"
                        },
                        new
                        {
                            PaisId = 117,
                            Nome = "Japão",
                            Sigla = "JP"
                        },
                        new
                        {
                            PaisId = 118,
                            Nome = "Jersey",
                            Sigla = "JE"
                        },
                        new
                        {
                            PaisId = 119,
                            Nome = "Jordânia",
                            Sigla = "JO"
                        },
                        new
                        {
                            PaisId = 120,
                            Nome = "Kiribati",
                            Sigla = "KI"
                        },
                        new
                        {
                            PaisId = 121,
                            Nome = "Kuwait",
                            Sigla = "KW"
                        },
                        new
                        {
                            PaisId = 122,
                            Nome = "Laos",
                            Sigla = "LA"
                        },
                        new
                        {
                            PaisId = 123,
                            Nome = "Lesoto",
                            Sigla = "LS"
                        },
                        new
                        {
                            PaisId = 124,
                            Nome = "Letónia",
                            Sigla = "LV"
                        },
                        new
                        {
                            PaisId = 125,
                            Nome = "Líbano",
                            Sigla = "LB"
                        },
                        new
                        {
                            PaisId = 126,
                            Nome = "Libéria",
                            Sigla = "LR"
                        },
                        new
                        {
                            PaisId = 127,
                            Nome = "Líbia",
                            Sigla = "LY"
                        },
                        new
                        {
                            PaisId = 128,
                            Nome = "Liechtenstein",
                            Sigla = "LI"
                        },
                        new
                        {
                            PaisId = 129,
                            Nome = "Lituânia",
                            Sigla = "LT"
                        },
                        new
                        {
                            PaisId = 130,
                            Nome = "Luxemburgo",
                            Sigla = "LU"
                        },
                        new
                        {
                            PaisId = 131,
                            Nome = "Macau",
                            Sigla = "MO"
                        },
                        new
                        {
                            PaisId = 132,
                            Nome = "Macedónia, República da",
                            Sigla = "MK"
                        },
                        new
                        {
                            PaisId = 133,
                            Nome = "Madagáscar",
                            Sigla = "MG"
                        },
                        new
                        {
                            PaisId = 134,
                            Nome = "Malásia",
                            Sigla = "MY"
                        },
                        new
                        {
                            PaisId = 135,
                            Nome = "Malawi",
                            Sigla = "MW"
                        },
                        new
                        {
                            PaisId = 136,
                            Nome = "Maldivas",
                            Sigla = "MV"
                        },
                        new
                        {
                            PaisId = 137,
                            Nome = "Mali",
                            Sigla = "ML"
                        },
                        new
                        {
                            PaisId = 138,
                            Nome = "Malta",
                            Sigla = "MT"
                        },
                        new
                        {
                            PaisId = 139,
                            Nome = "Malvinas, Ilhas (Falkland)",
                            Sigla = "FK"
                        },
                        new
                        {
                            PaisId = 140,
                            Nome = "Man, Ilha de",
                            Sigla = "IM"
                        },
                        new
                        {
                            PaisId = 141,
                            Nome = "Marianas Setentrionais",
                            Sigla = "MP"
                        },
                        new
                        {
                            PaisId = 142,
                            Nome = "Marrocos",
                            Sigla = "MA"
                        },
                        new
                        {
                            PaisId = 143,
                            Nome = "Marshall, Ilhas",
                            Sigla = "MH"
                        },
                        new
                        {
                            PaisId = 144,
                            Nome = "Martinica",
                            Sigla = "MQ"
                        },
                        new
                        {
                            PaisId = 145,
                            Nome = "Maurícia",
                            Sigla = "MU"
                        },
                        new
                        {
                            PaisId = 146,
                            Nome = "Mauritânia",
                            Sigla = "MR"
                        },
                        new
                        {
                            PaisId = 147,
                            Nome = "Mayotte",
                            Sigla = "YT"
                        },
                        new
                        {
                            PaisId = 148,
                            Nome = "Menores Distantes dos Estados Unidos, Ilhas",
                            Sigla = "UM"
                        },
                        new
                        {
                            PaisId = 149,
                            Nome = "México",
                            Sigla = "MX"
                        },
                        new
                        {
                            PaisId = 150,
                            Nome = "Myanmar (antiga Birmânia)",
                            Sigla = "MM"
                        },
                        new
                        {
                            PaisId = 151,
                            Nome = "Micronésia, Estados Federados da",
                            Sigla = "FM"
                        },
                        new
                        {
                            PaisId = 152,
                            Nome = "Moçambique",
                            Sigla = "MZ"
                        },
                        new
                        {
                            PaisId = 153,
                            Nome = "Moldávia",
                            Sigla = "MD"
                        },
                        new
                        {
                            PaisId = 154,
                            Nome = "Mónaco",
                            Sigla = "MC"
                        },
                        new
                        {
                            PaisId = 155,
                            Nome = "Mongólia",
                            Sigla = "MN"
                        },
                        new
                        {
                            PaisId = 156,
                            Nome = "Montenegro",
                            Sigla = "ME"
                        },
                        new
                        {
                            PaisId = 157,
                            Nome = "Montserrat",
                            Sigla = "MS"
                        },
                        new
                        {
                            PaisId = 158,
                            Nome = "Namíbia",
                            Sigla = "NA"
                        },
                        new
                        {
                            PaisId = 159,
                            Nome = "Nauru",
                            Sigla = "NR"
                        },
                        new
                        {
                            PaisId = 160,
                            Nome = "Nepal",
                            Sigla = "NP"
                        },
                        new
                        {
                            PaisId = 161,
                            Nome = "Nicarágua",
                            Sigla = "NI"
                        },
                        new
                        {
                            PaisId = 162,
                            Nome = "Níger",
                            Sigla = "NE"
                        },
                        new
                        {
                            PaisId = 163,
                            Nome = "Nigéria",
                            Sigla = "NG"
                        },
                        new
                        {
                            PaisId = 164,
                            Nome = "Niue",
                            Sigla = "NU"
                        },
                        new
                        {
                            PaisId = 165,
                            Nome = "Norfolk, Ilha",
                            Sigla = "NF"
                        },
                        new
                        {
                            PaisId = 166,
                            Nome = "Noruega",
                            Sigla = "NO"
                        },
                        new
                        {
                            PaisId = 167,
                            Nome = "Nova Caledónia",
                            Sigla = "NC"
                        },
                        new
                        {
                            PaisId = 168,
                            Nome = "Nova Zelândia (Aotearoa)",
                            Sigla = "NZ"
                        },
                        new
                        {
                            PaisId = 169,
                            Nome = "Oman",
                            Sigla = "OM"
                        },
                        new
                        {
                            PaisId = 170,
                            Nome = "Países Baixos (Holanda)",
                            Sigla = "NL"
                        },
                        new
                        {
                            PaisId = 171,
                            Nome = "Palau",
                            Sigla = "PW"
                        },
                        new
                        {
                            PaisId = 172,
                            Nome = "Palestina",
                            Sigla = "PS"
                        },
                        new
                        {
                            PaisId = 173,
                            Nome = "Panamá",
                            Sigla = "PA"
                        },
                        new
                        {
                            PaisId = 174,
                            Nome = "PapuaNova Guiné",
                            Sigla = "PG"
                        },
                        new
                        {
                            PaisId = 175,
                            Nome = "Paquistão",
                            Sigla = "PK"
                        },
                        new
                        {
                            PaisId = 176,
                            Nome = "Paraguai",
                            Sigla = "PY"
                        },
                        new
                        {
                            PaisId = 177,
                            Nome = "Peru",
                            Sigla = "PE"
                        },
                        new
                        {
                            PaisId = 178,
                            Nome = "Pitcairn",
                            Sigla = "PN"
                        },
                        new
                        {
                            PaisId = 179,
                            Nome = "Polinésia Francesa",
                            Sigla = "PF"
                        },
                        new
                        {
                            PaisId = 180,
                            Nome = "Polónia",
                            Sigla = "PL"
                        },
                        new
                        {
                            PaisId = 181,
                            Nome = "Porto Rico",
                            Sigla = "PR"
                        },
                        new
                        {
                            PaisId = 182,
                            Nome = "Portugal",
                            Sigla = "PT"
                        },
                        new
                        {
                            PaisId = 183,
                            Nome = "Qatar",
                            Sigla = "QA"
                        },
                        new
                        {
                            PaisId = 184,
                            Nome = "Quénia",
                            Sigla = "KE"
                        },
                        new
                        {
                            PaisId = 185,
                            Nome = "Quirguistão",
                            Sigla = "KG"
                        },
                        new
                        {
                            PaisId = 186,
                            Nome = "Reino Unido da GrãBretanha e Irlanda do Norte",
                            Sigla = "GB"
                        },
                        new
                        {
                            PaisId = 187,
                            Nome = "Reunião",
                            Sigla = "RE"
                        },
                        new
                        {
                            PaisId = 188,
                            Nome = "Roménia",
                            Sigla = "RO"
                        },
                        new
                        {
                            PaisId = 189,
                            Nome = "Ruanda",
                            Sigla = "RW"
                        },
                        new
                        {
                            PaisId = 190,
                            Nome = "Rússia",
                            Sigla = "RU"
                        },
                        new
                        {
                            PaisId = 191,
                            Nome = "Saara Ocidental",
                            Sigla = "EH"
                        },
                        new
                        {
                            PaisId = 192,
                            Nome = "Samoa Americana",
                            Sigla = "AS"
                        },
                        new
                        {
                            PaisId = 193,
                            Nome = "Samoa (Samoa Ocidental)",
                            Sigla = "WS"
                        },
                        new
                        {
                            PaisId = 194,
                            Nome = "Saint Pierre et Miquelon",
                            Sigla = "PM"
                        },
                        new
                        {
                            PaisId = 195,
                            Nome = "Salomão, Ilhas",
                            Sigla = "SB"
                        },
                        new
                        {
                            PaisId = 196,
                            Nome = "São Cristóvão e Névis (Saint Kitts e Nevis)",
                            Sigla = "KN"
                        },
                        new
                        {
                            PaisId = 197,
                            Nome = "San Marino",
                            Sigla = "SM"
                        },
                        new
                        {
                            PaisId = 198,
                            Nome = "São Tomé e Príncipe",
                            Sigla = "ST"
                        },
                        new
                        {
                            PaisId = 199,
                            Nome = "São Vicente e Granadinas",
                            Sigla = "VC"
                        },
                        new
                        {
                            PaisId = 200,
                            Nome = "Santa Helena",
                            Sigla = "SH"
                        },
                        new
                        {
                            PaisId = 201,
                            Nome = "Santa Lúcia",
                            Sigla = "LC"
                        },
                        new
                        {
                            PaisId = 202,
                            Nome = "Senegal",
                            Sigla = "SN"
                        },
                        new
                        {
                            PaisId = 203,
                            Nome = "Serra Leoa",
                            Sigla = "SL"
                        },
                        new
                        {
                            PaisId = 204,
                            Nome = "Sérvia",
                            Sigla = "RS"
                        },
                        new
                        {
                            PaisId = 205,
                            Nome = "Seychelles",
                            Sigla = "SC"
                        },
                        new
                        {
                            PaisId = 206,
                            Nome = "Singapura",
                            Sigla = "SG"
                        },
                        new
                        {
                            PaisId = 207,
                            Nome = "Síria",
                            Sigla = "SY"
                        },
                        new
                        {
                            PaisId = 208,
                            Nome = "Somália",
                            Sigla = "SO"
                        },
                        new
                        {
                            PaisId = 209,
                            Nome = "Sri Lanka",
                            Sigla = "LK"
                        },
                        new
                        {
                            PaisId = 210,
                            Nome = "Suazilândia",
                            Sigla = "SZ"
                        },
                        new
                        {
                            PaisId = 211,
                            Nome = "Sudão",
                            Sigla = "SD"
                        },
                        new
                        {
                            PaisId = 212,
                            Nome = "Suécia",
                            Sigla = "SE"
                        },
                        new
                        {
                            PaisId = 213,
                            Nome = "Suíça",
                            Sigla = "CH"
                        },
                        new
                        {
                            PaisId = 214,
                            Nome = "Suriname",
                            Sigla = "SR"
                        },
                        new
                        {
                            PaisId = 215,
                            Nome = "Svalbard e Jan Mayen",
                            Sigla = "SJ"
                        },
                        new
                        {
                            PaisId = 216,
                            Nome = "Tailândia",
                            Sigla = "TH"
                        },
                        new
                        {
                            PaisId = 217,
                            Nome = "Taiwan",
                            Sigla = "TW"
                        },
                        new
                        {
                            PaisId = 218,
                            Nome = "Tajiquistão",
                            Sigla = "TJ"
                        },
                        new
                        {
                            PaisId = 219,
                            Nome = "Tanzânia",
                            Sigla = "TZ"
                        },
                        new
                        {
                            PaisId = 220,
                            Nome = "Terras Austrais e Antárticas Francesas (TAAF)",
                            Sigla = "TF"
                        },
                        new
                        {
                            PaisId = 221,
                            Nome = "Território Britânico do Oceano Índico",
                            Sigla = "IO"
                        },
                        new
                        {
                            PaisId = 222,
                            Nome = "TimorLeste",
                            Sigla = "TL"
                        },
                        new
                        {
                            PaisId = 223,
                            Nome = "Togo",
                            Sigla = "TG"
                        },
                        new
                        {
                            PaisId = 224,
                            Nome = "Toquelau",
                            Sigla = "TK"
                        },
                        new
                        {
                            PaisId = 225,
                            Nome = "Tonga",
                            Sigla = "TO"
                        },
                        new
                        {
                            PaisId = 226,
                            Nome = "Trindade e Tobago",
                            Sigla = "TT"
                        },
                        new
                        {
                            PaisId = 227,
                            Nome = "Tunísia",
                            Sigla = "TN"
                        },
                        new
                        {
                            PaisId = 228,
                            Nome = "Turks e Caicos",
                            Sigla = "TC"
                        },
                        new
                        {
                            PaisId = 229,
                            Nome = "Turquemenistão",
                            Sigla = "TM"
                        },
                        new
                        {
                            PaisId = 230,
                            Nome = "Turquia",
                            Sigla = "TR"
                        },
                        new
                        {
                            PaisId = 231,
                            Nome = "Tuvalu",
                            Sigla = "TV"
                        },
                        new
                        {
                            PaisId = 232,
                            Nome = "Ucrânia",
                            Sigla = "UA"
                        },
                        new
                        {
                            PaisId = 233,
                            Nome = "Uganda",
                            Sigla = "UG"
                        },
                        new
                        {
                            PaisId = 234,
                            Nome = "Uruguai",
                            Sigla = "UY"
                        },
                        new
                        {
                            PaisId = 235,
                            Nome = "Usbequistão",
                            Sigla = "UZ"
                        },
                        new
                        {
                            PaisId = 236,
                            Nome = "Vanuatu",
                            Sigla = "VU"
                        },
                        new
                        {
                            PaisId = 237,
                            Nome = "Vaticano",
                            Sigla = "VA"
                        },
                        new
                        {
                            PaisId = 238,
                            Nome = "Venezuela",
                            Sigla = "VE"
                        },
                        new
                        {
                            PaisId = 239,
                            Nome = "Vietname",
                            Sigla = "VN"
                        },
                        new
                        {
                            PaisId = 240,
                            Nome = "Virgens Americanas, Ilhas",
                            Sigla = "VI"
                        },
                        new
                        {
                            PaisId = 241,
                            Nome = "Virgens Britânicas, Ilhas",
                            Sigla = "VG"
                        },
                        new
                        {
                            PaisId = 242,
                            Nome = "Wallis e Futuna",
                            Sigla = "WF"
                        },
                        new
                        {
                            PaisId = 243,
                            Nome = "Zâmbia",
                            Sigla = "ZM"
                        },
                        new
                        {
                            PaisId = 244,
                            Nome = "Zimbabwe",
                            Sigla = "ZW"
                        });
                });

            modelBuilder.Entity("CVC19.Models.TipoAgentePatogenico", b =>
                {
                    b.Property<int>("TipoAgentePatogenicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("TipoAgentePatogenicoId");

                    b.ToTable("TipoAgentePatogenico");

                    b.HasData(
                        new
                        {
                            TipoAgentePatogenicoId = 1,
                            Nome = "Bactéria"
                        },
                        new
                        {
                            TipoAgentePatogenicoId = 2,
                            Nome = "Fungo"
                        },
                        new
                        {
                            TipoAgentePatogenicoId = 3,
                            Nome = "Protozoário"
                        },
                        new
                        {
                            TipoAgentePatogenicoId = 4,
                            Nome = "Vírus"
                        });
                });

            modelBuilder.Entity("CVC19.Models.TipoVacina", b =>
                {
                    b.Property<int>("TipoVacinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(240)
                        .HasColumnType("character varying(240)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("TipoVacinaId");

                    b.ToTable("TipoVacina");

                    b.HasData(
                        new
                        {
                            TipoVacinaId = 1,
                            Descricao = "Usa o patógeno completo e inativo (\"Morto\"). A vacina tem todas as proteínas do vírus",
                            Nome = "Patógeno Inativado"
                        },
                        new
                        {
                            TipoVacinaId = 2,
                            Descricao = "Usa um outro patógeno para carregar o material genético para dentro da célula",
                            Nome = "Vetor Patógeno"
                        },
                        new
                        {
                            TipoVacinaId = 3,
                            Descricao = "Usa o material genético (RNA) do patógeno para que fornecer as instruções para que a célula produz a proteína do patógeno",
                            Nome = "RNA"
                        },
                        new
                        {
                            TipoVacinaId = 4,
                            Descricao = "Fornece a proteína para estimular o sistema imunológico",
                            Nome = "Subunidade de Proteínas"
                        });
                });

            modelBuilder.Entity("CVC19.Models.Vacina", b =>
                {
                    b.Property<int>("VacinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AgentePatogenicoId")
                        .HasColumnType("integer");

                    b.Property<int>("LaboratorioId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("TipoVacinaId")
                        .HasColumnType("integer");

                    b.HasKey("VacinaId");

                    b.HasIndex("AgentePatogenicoId");

                    b.HasIndex("LaboratorioId");

                    b.HasIndex("TipoVacinaId");

                    b.ToTable("Vacina");

                    b.HasData(
                        new
                        {
                            VacinaId = 1,
                            AgentePatogenicoId = 1,
                            LaboratorioId = 1,
                            Nome = "CoronaVac",
                            TipoVacinaId = 1
                        },
                        new
                        {
                            VacinaId = 2,
                            AgentePatogenicoId = 1,
                            LaboratorioId = 2,
                            Nome = "BBIBPCorV",
                            TipoVacinaId = 1
                        },
                        new
                        {
                            VacinaId = 3,
                            AgentePatogenicoId = 1,
                            LaboratorioId = 3,
                            Nome = "Desconhecido",
                            TipoVacinaId = 1
                        },
                        new
                        {
                            VacinaId = 4,
                            AgentePatogenicoId = 1,
                            LaboratorioId = 4,
                            Nome = "QzCovidin",
                            TipoVacinaId = 1
                        },
                        new
                        {
                            VacinaId = 5,
                            AgentePatogenicoId = 1,
                            LaboratorioId = 5,
                            Nome = "Covaxin",
                            TipoVacinaId = 1
                        },
                        new
                        {
                            VacinaId = 6,
                            AgentePatogenicoId = 1,
                            LaboratorioId = 6,
                            Nome = "AZD1222",
                            TipoVacinaId = 2
                        },
                        new
                        {
                            VacinaId = 7,
                            AgentePatogenicoId = 1,
                            LaboratorioId = 7,
                            Nome = "AD5nCov",
                            TipoVacinaId = 2
                        },
                        new
                        {
                            VacinaId = 8,
                            AgentePatogenicoId = 1,
                            LaboratorioId = 8,
                            Nome = "Sputnik V",
                            TipoVacinaId = 2
                        },
                        new
                        {
                            VacinaId = 9,
                            AgentePatogenicoId = 1,
                            LaboratorioId = 9,
                            Nome = "Ad26 SARSCoV2",
                            TipoVacinaId = 2
                        },
                        new
                        {
                            VacinaId = 10,
                            AgentePatogenicoId = 1,
                            LaboratorioId = 10,
                            Nome = "mRNA 1273",
                            TipoVacinaId = 3
                        },
                        new
                        {
                            VacinaId = 11,
                            AgentePatogenicoId = 1,
                            LaboratorioId = 11,
                            Nome = "BNT162",
                            TipoVacinaId = 3
                        },
                        new
                        {
                            VacinaId = 12,
                            AgentePatogenicoId = 1,
                            LaboratorioId = 12,
                            Nome = "CVnCoV",
                            TipoVacinaId = 3
                        },
                        new
                        {
                            VacinaId = 13,
                            AgentePatogenicoId = 1,
                            LaboratorioId = 13,
                            Nome = "ZycovD",
                            TipoVacinaId = 3
                        },
                        new
                        {
                            VacinaId = 14,
                            AgentePatogenicoId = 1,
                            LaboratorioId = 14,
                            Nome = "NVXCoV2373",
                            TipoVacinaId = 4
                        },
                        new
                        {
                            VacinaId = 15,
                            AgentePatogenicoId = 1,
                            LaboratorioId = 15,
                            Nome = "RBDDimer",
                            TipoVacinaId = 4
                        });
                });

            modelBuilder.Entity("CVC19.Models.VarianteAgentePatogenico", b =>
                {
                    b.Property<int>("VarianteAgentePatogenicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AgentePatogenicoId")
                        .HasColumnType("integer");

                    b.Property<string>("Caracteristica")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int?>("PaisId")
                        .HasColumnType("integer");

                    b.Property<string>("PrincipaisMutacoes")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("VarianteAgentePatogenicoId");

                    b.HasIndex("AgentePatogenicoId");

                    b.HasIndex("PaisId");

                    b.ToTable("VarianteAgentePatogenico");

                    b.HasData(
                        new
                        {
                            VarianteAgentePatogenicoId = 1,
                            AgentePatogenicoId = 1,
                            Caracteristica = "Mais transmissível",
                            Nome = "B.1.1.7",
                            PaisId = 186,
                            PrincipaisMutacoes = "N501Y, 69–70del, P681H"
                        },
                        new
                        {
                            VarianteAgentePatogenicoId = 2,
                            AgentePatogenicoId = 1,
                            Caracteristica = "Mais transmissível e com possível enfraquecimento da ação dos anticorpos humanos contra o vírus",
                            Nome = "B.1351",
                            PaisId = 2,
                            PrincipaisMutacoes = "N501Y, K417N, E484K"
                        },
                        new
                        {
                            VarianteAgentePatogenicoId = 3,
                            AgentePatogenicoId = 1,
                            Caracteristica = "Mais transmissível e com possível enfraquecimento da ação dos anticorpos humanos contra o vírus",
                            Nome = "P.1",
                            PaisId = 33,
                            PrincipaisMutacoes = "N501Y, K417N, E484K"
                        },
                        new
                        {
                            VarianteAgentePatogenicoId = 4,
                            AgentePatogenicoId = 1,
                            Caracteristica = "Possível enfraquecimento da ação dos anticorpos humanos contra o vírus",
                            Nome = "P.2",
                            PaisId = 33,
                            PrincipaisMutacoes = "E484K"
                        },
                        new
                        {
                            VarianteAgentePatogenicoId = 5,
                            AgentePatogenicoId = 1,
                            Caracteristica = "Desconhecido",
                            Nome = "B.1.1.207",
                            PaisId = 163,
                            PrincipaisMutacoes = "P681H"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            ConcurrencyStamp = "095a6715-6b9a-41ab-933c-e4a8c067f220",
                            Name = "ADMIN",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            ConcurrencyStamp = "8c5876e9-a4f8-4007-89d3-b5a9b09e7182",
                            Name = "GESTOR_VACINA",
                            NormalizedName = "GESTOR_VACINA"
                        },
                        new
                        {
                            Id = "3",
                            ConcurrencyStamp = "330a116f-6859-4520-966b-b7ede22dbdb2",
                            Name = "GESTOR_PATOGENO",
                            NormalizedName = "GESTOR_PATOGENO"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "1ff6e1f7-2049-434b-8e5a-93d454203652",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0799389d-af42-4530-8b63-4efff19fb702",
                            Email = "gestor.patogeno@gestaopandemia.com.br",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "GESTOR.PATOGENO@GESTAOPANDEMIA.COM.BR",
                            NormalizedUserName = "GESTOR.PATOGENO@GESTAOPANDEMIA.COM.BR",
                            PasswordHash = "AQAAAAEAACcQAAAAEDnGJexv5zVzdMX9JOmG2bzgpcOLKfy9ra6cMqZr8JGIdxq7PxqR1lkCU+Pg0Gqecw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "KNIHZXZV42FGMK7XZDGEIX6P6QPUICGU",
                            TwoFactorEnabled = false,
                            UserName = "gestor.patogeno@gestaopandemia.com.br"
                        },
                        new
                        {
                            Id = "3872c9f1-555b-486f-a5e5-5f0de852b677",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "efedc7fc-f4b6-444e-be24-61aef4f24f0e",
                            Email = "gestor.vacina@gestaopandemia.com.br",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "GESTOR.VACINA@GESTAOPANDEMIA.COM.BR",
                            NormalizedUserName = "GESTOR.VACINA@GESTAOPANDEMIA.COM.BR",
                            PasswordHash = "AQAAAAEAACcQAAAAEEhruVTtYGoBjbjyyKVnIx10uuPr5Me0VYWkUwPXZynAOSpAZxlk8Umwj92FDimzgw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Z2YZBTQXYJYYTIN2ORODRQWI3RPJN5ZS",
                            TwoFactorEnabled = false,
                            UserName = "gestor.vacina@gestaopandemia.com.br"
                        },
                        new
                        {
                            Id = "95c36366-0c04-41fc-b317-f77655da019d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "62e0cbc7-8747-4dbb-8bdd-e256c5b6d3cf",
                            Email = "adminstrador@gestaopandemia.com.br",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMINSTRADOR@GESTAOPANDEMIA.COM.BR",
                            NormalizedUserName = "ADMINSTRADOR@GESTAOPANDEMIA.COM.BR",
                            PasswordHash = "AQAAAAEAACcQAAAAEBhFLa833zCa3xvqBMqCpq4eJN2Ub7k91Dqdyh0Fgf2RuX3KVcw6HKFZpXCRXEoWTA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "YWCTGIE4H4U22NNV5K4NUA6EH5MQYG5B",
                            TwoFactorEnabled = false,
                            UserName = "adminstrador@gestaopandemia.com.br"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "95c36366-0c04-41fc-b317-f77655da019d",
                            RoleId = "1"
                        },
                        new
                        {
                            UserId = "3872c9f1-555b-486f-a5e5-5f0de852b677",
                            RoleId = "2"
                        },
                        new
                        {
                            UserId = "1ff6e1f7-2049-434b-8e5a-93d454203652",
                            RoleId = "3"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CVC19.Models.AgentePatogenico", b =>
                {
                    b.HasOne("CVC19.Models.TipoAgentePatogenico", "TipoAgentePatogenico")
                        .WithMany()
                        .HasForeignKey("TipoAgentePatogenicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoAgentePatogenico");
                });

            modelBuilder.Entity("CVC19.Models.Laboratorio", b =>
                {
                    b.HasOne("CVC19.Models.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("CVC19.Models.Vacina", b =>
                {
                    b.HasOne("CVC19.Models.AgentePatogenico", "AgentePatogenico")
                        .WithMany()
                        .HasForeignKey("AgentePatogenicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CVC19.Models.Laboratorio", "Laboratorio")
                        .WithMany()
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CVC19.Models.TipoVacina", "TipoVacina")
                        .WithMany("ListaVacina")
                        .HasForeignKey("TipoVacinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgentePatogenico");

                    b.Navigation("Laboratorio");

                    b.Navigation("TipoVacina");
                });

            modelBuilder.Entity("CVC19.Models.VarianteAgentePatogenico", b =>
                {
                    b.HasOne("CVC19.Models.AgentePatogenico", "AgentePatogenico")
                        .WithMany("ListaVarianteAgentePatogenico")
                        .HasForeignKey("AgentePatogenicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CVC19.Models.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId");

                    b.Navigation("AgentePatogenico");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CVC19.Models.AgentePatogenico", b =>
                {
                    b.Navigation("ListaVarianteAgentePatogenico");
                });

            modelBuilder.Entity("CVC19.Models.TipoVacina", b =>
                {
                    b.Navigation("ListaVacina");
                });
#pragma warning restore 612, 618
        }
    }
}
